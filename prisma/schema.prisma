generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @default(uuid())

  username  String  @unique
  name      String
  image     String?
  bio       String?
  onboarded Boolean @default(false)

  threads              Thread[]
  communities          Community[] @relation(name: "CommunityCreatedBy")
  communityMemberships Community[] @relation(name: "CommunityMembers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Thread {
  id String @id @default(uuid())

  text     String
  parentId String?
  parent   Thread?  @relation("ParentThreadChildren", fields: [parentId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  children Thread[] @relation("ParentThreadChildren")

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  community   Community? @relation(fields: [communityId], references: [id])
  communityId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([parentId])
  @@index([communityId])
  @@index([authorId])
}

model Community {
  id String @id @default(uuid())

  username String  @unique
  name     String
  image    String?
  bio      String?

  createdBy   User   @relation(name: "CommunityCreatedBy", fields: [createdById], references: [id])
  createdById String

  threads Thread[]
  members User[]   @relation(name: "CommunityMembers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdById])
}
